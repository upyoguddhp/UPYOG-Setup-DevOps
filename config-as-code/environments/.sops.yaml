# creation rules are evaluated sequentially, the first match wins
creation_rules:
        # upon creation of a file that matches the pattern *dev.yaml,
        # KMS set A is used
        # NUGP Internal ------------------------------------------------------------------------------------------------------------- #
        - path_regex: environments/nugp\-demo\-secrets\.yaml$
          kms: 'arn:aws:kms:ap-south-1:456677218055:key/11647c2f-96d5-4ed5-ab65-9c5b8e3de46b' 
          #kms: 'arn:aws:kms:ap-south-1:218381940040:key/e0b974a0-3640-424a-a7fb-c76331d0fa0b'         
          #gcp_kms: 'projects/digit-egov/locations/asia-south1/keyRings/egov-sops/cryptoKeys/egov-sops-key'
          #pgp: 'B9FF61E01273EDF7DE298B52F4D6BD77E5C66196'
          
        #- path_regex: environments/upyog\-sandbox\-secrets\.yaml$ 
         # kms: 'arn:aws:kms:ap-south-1:218381940040:key/e0b974a0-3640-424a-a7fb-c76331d0fa0b'
          pgp: 'B9FF61E01273EDF7DE298B52F4D6BD77E5C66196'
          
          

        
 
        # DEFAULT ------------------------------------------------------------------------------------------------------------- #
        # Finally, if the rules above have not matched, this one is a
        # catchall that will encrypt the file using KMS set C
        # The absence of a path_regex means it will match everything
        - kms: 'arn:aws:kms:ap-south-1:456677218055:key/11647c2f-96d5-4ed5-ab65-9c5b8e3de46b'
          #gcp_kms: 'projects/digit-egov/locations/asia-south1/keyRings/egov-sops/cryptoKeys/egov-sops-key'
          encrypted_regex: '^(secrets)$'
          pgp: 'B9FF61E01273EDF7DE298B52F4D6BD77E5C66196'

        # - path_regex: environments/dev\.yaml$
        #   encrypted_regex: '^(secrets)$'
        #   kms: 'arn:aws:kms:ap-south-1:218381940040:key/9a3b0835-7713-4925-8b3d-da7e421d28d2'
        #   pgp: 'C7ED80C79625B40667A6FAD6774DE10645AAD1BB'
